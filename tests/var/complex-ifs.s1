	.globl main
	.align 16
main:
    subq $8, %rsp
    jmp start

	.align 16
start:
    callq read_int
    movq %rax, %rdi
    movq $1, %rsi
    movq $1, %rcx
    movq $1, %rdx
    movq $1, %r8
    cmpq $1, %rsi
    je block_20
    jmp block_2

	.align 16
block_1:
    jmp block_30

	.align 16
block_2:
    movq $0, %rdi
    jmp block_30

	.align 16
block_3:
    cmpq $1, %rdx
    je block_7
    jmp block_2
    jmp block_29

	.align 16
block_4:
    jmp block_2

	.align 16
block_5:
    jmp block_1

	.align 16
block_6:
    jmp block_2

	.align 16
block_7:
    cmpq $1, %r8
    je block_1
    jmp block_2
    jmp block_15

	.align 16
block_8:
    jmp block_2

	.align 16
block_9:
    jmp block_1

	.align 16
block_10:
    jmp block_2

	.align 16
block_11:

	.align 16
block_12:
    jmp block_1

	.align 16
block_13:
    jmp block_2

	.align 16
block_14:

	.align 16
block_15:

	.align 16
block_16:

	.align 16
block_17:
    jmp block_1

	.align 16
block_18:
    jmp block_2

	.align 16
block_19:

	.align 16
block_20:
    cmpq $1, %rcx
    je block_3
    jmp block_2
    jmp block_28

	.align 16
block_21:
    jmp block_2

	.align 16
block_22:
    jmp block_3

	.align 16
block_23:
    jmp block_2

	.align 16
block_24:

	.align 16
block_25:
    jmp block_3

	.align 16
block_26:
    jmp block_2

	.align 16
block_27:

	.align 16
block_28:

	.align 16
block_29:

	.align 16
block_30:
    callq print_int
    movq $0, %rax
    jmp conclusion

	.align 16
conclusion:
    addq $8, %rsp
    retq 


